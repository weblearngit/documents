(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{365:function(t,a,s){"use strict";s.r(a);var n=s(25),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Git 的操作指令非常多，此处仅选一些日常操作。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意：以下所有 "),s("code",[t._v("[]")]),t._v(" 仅作为划分区域，无实际作用，可无视。")])]),t._v(" "),s("h2",{attrs:{id:"查看帮助"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看帮助","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看帮助")]),t._v(" "),s("p",[t._v("所有命令行最重要的当然是查看帮助文档：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("help")]),t._v("\n")])])]),s("p",[t._v("结果：")]),t._v(" "),s("div",{staticClass:"language-vim extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vim"}},[s("code",[t._v("用法：git "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("help")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("C "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("取值"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("exec"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("man"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("p")]),t._v(" | "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("paginate | "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("P")]),t._v(" | "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("no"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("pager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("no"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("replace"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bare"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("git"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dir")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("work"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("tree"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("路径"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("namespace"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("命令"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("参数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n这些是各种场合常见的 Git 命令：\n\n开始一个工作区（参见：git "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("help")]),t._v(" tutorial）\n   clone      克隆仓库到一个新目录\n   init       创建一个空的 Git 仓库或重新初始化一个已存在的仓库\n\n在当前变更上工作（参见：git "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("help")]),t._v(" everyday）\n   add        添加文件内容至索引\n   mv         移动或重命名一个文件、目录或符号链接\n   reset      重置当前 HEAD 到指定状态\n   rm         从工作区和索引中删除文件\n\n检查历史和状态（参见：git "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("help")]),t._v(" revisions）\n   bisect     通过二分查找定位引入 bug 的提交\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("grep")]),t._v("       输出和模式匹配的行\n   log        显示提交日志\n   show       显示各种类型的对象\n   status     显示工作区状态\n\n扩展、标记和调校您的历史记录\n   branch     列出、创建或删除分支\n   checkout   切换分支或恢复工作区文件\n   commit     记录变更到仓库\n   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("diff")]),t._v("       显示提交之间、提交和工作区之间等的差异\n   merge      合并两个或更多开发历史\n   rebase     在另一个分支上重新应用提交\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tag")]),t._v("        创建、列出、删除或校验一个 GPG 签名的标签对象\n\n协同（参见：git "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("help")]),t._v(" workflows）\n   fetch      从另外一个仓库下载对象和引用\n   pull       获取并整合另外的仓库或一个本地分支\n   push       更新远程引用和相关的对象\n\n命令 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git help -a'")]),t._v(" 和 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git help -g'")]),t._v(" 显示可用的子命令和一些概念帮助。\n查看 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git help <命令>'")]),t._v(" 或 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git help <概念>'")]),t._v(" 以获取给定子命令或概念的\n帮助。\n")])])]),s("h2",{attrs:{id:"重命名文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重命名文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 重命名文件")]),t._v(" "),s("p",[t._v("总是觉得名字不够优雅，常常去修改：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" readme readme.md\n")])])]),s("h2",{attrs:{id:"删除文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 删除文件")]),t._v(" "),s("p",[t._v("删除文件的操作与重命名文件类似：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" file1\n")])])]),s("h2",{attrs:{id:"创建分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建分支")]),t._v(" "),s("p",[t._v("上面有了删除分支，当然也要有创建分支，创建分支往往会基于某个分支来创建：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 本地")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于当前分支创建")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b branch1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于 branch2 分支创建")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b branch1 branch2\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于 branch1 分支创建（一般会将命名相同，方便 push）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b branch1 origin/branch1\n")])])]),s("p",[t._v("在这里补充一个想法，想要 "),s("code",[t._v("git push")]),t._v(" 成功的关键是 "),s("code",[t._v("fast-forward")]),t._v(" 。")]),t._v(" "),s("h2",{attrs:{id:"查看日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看日志","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看日志")]),t._v(" "),s("blockquote",[s("p",[t._v("参数可以组合，更强大。")])]),t._v(" "),s("h3",{attrs:{id:"当前分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当前分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 当前分支")]),t._v(" "),s("p",[t._v("查看当前分支的日志：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n")])])]),s("p",[t._v("单行显示当前分支：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --oneline\n")])])]),s("p",[t._v("当前分支的最近几条日志：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -n2\n")])])]),s("p",[t._v("单行显示当前分支的最近几条日志：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -n2 --oneline\n")])])]),s("p",[t._v("图形化显示当前分支（更复杂的看所有分支示例）：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --graph\n")])])]),s("h3",{attrs:{id:"所有分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#所有分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 所有分支")]),t._v(" "),s("p",[t._v("显示所有分支的日志：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --all\n")])])]),s("p",[t._v("单行显示所有分支的日志：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --all --oneline\n")])])]),s("p",[t._v("所有分支的最近几条日志：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --all -n2\n")])])]),s("p",[t._v("单行显示所有分支的最近几条日志：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --all -n4 --oneline\n")])])]),s("p",[t._v("单行图形化显示所有分支的最近几条日志：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --all -n20 --oneline --graph\n")])])]),s("h3",{attrs:{id:"某一分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#某一分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 某一分支")]),t._v(" "),s("p",[t._v("可以指定某个分支：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log origin/gh-pages\n")])])]),s("h2",{attrs:{id:"修改-commit-信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改-commit-信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 修改 commit 信息")]),t._v(" "),s("p",[t._v("commit 总是描述的不合意，需要进行修改：")]),t._v(" "),s("h3",{attrs:{id:"修改最近一次-commit-信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改最近一次-commit-信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 修改最近一次 commit 信息")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend\n")])])]),s("h3",{attrs:{id:"修改之前的-commit-信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改之前的-commit-信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 修改之前的 commit 信息")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到你需要的分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout x_branch\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出该分支的 commit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase 需要修改的父 hash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("父 hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将对应的 pick 修改为 reword（r）即可")]),t._v("\n")])])]),s("h3",{attrs:{id:"将连续的多个-commit-合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将连续的多个-commit-合并","aria-hidden":"true"}},[t._v("#")]),t._v(" 将连续的多个 commit 合并")]),t._v(" "),s("p",[t._v("其实与上方的操作一致：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到你需要的分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout x_branch\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出该分支的 commit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase 需要修改的父 hash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("父 hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将连续内容的 pick 修改为 squash（s） 即可")]),t._v("\n")])])]),s("h3",{attrs:{id:"将间隔的多个-commit-合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将间隔的多个-commit-合并","aria-hidden":"true"}},[t._v("#")]),t._v(" 将间隔的多个 commit 合并")]),t._v(" "),s("p",[t._v("依然需要使用 "),s("code",[t._v("rebase")]),t._v(" ：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到你需要的分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout x_branch\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出该分支的 commit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase 需要修改的父 hash，没有父 hash 时就选最后一个即可")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("父 hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 拷贝最后一个 hash 手动添加至编辑器最上方")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. 将需要合并的 commit 上移至添加的上方")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3. 将上移的 pick 修改为 squash（s） 即可")]),t._v("\n")])])]),s("h2",{attrs:{id:"查看区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看区别")]),t._v(" "),s("p",[t._v("经常需要查看文件发生了哪些变更。尤其是现在电脑屏幕小，总感觉会漏掉点什么。")]),t._v(" "),s("h3",{attrs:{id:"工作区和暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作区和暂存区","aria-hidden":"true"}},[t._v("#")]),t._v(" 工作区和暂存区")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有文件的区别")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某个（多个）文件的区别")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" -- xxx xxx2\n")])])]),s("h3",{attrs:{id:"暂存区和-head"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂存区和-head","aria-hidden":"true"}},[t._v("#")]),t._v(" 暂存区和 HEAD")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --cached\n")])])]),s("h3",{attrs:{id:"分支之间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支之间","aria-hidden":"true"}},[t._v("#")]),t._v(" 分支之间")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择你想要对比的两个分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" branch1 branch2\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 前面提及具体对比某个文件加上 `--` 即可")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" branch1 branch2 -- file1\n")])])]),s("h3",{attrs:{id:"commit-之间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-之间","aria-hidden":"true"}},[t._v("#")]),t._v(" commit 之间")]),t._v(" "),s("p",[t._v("基本与分支之间一致")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择你想要对比的两个 commit hash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hash1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hash2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"取消"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#取消","aria-hidden":"true"}},[t._v("#")]),t._v(" 取消")]),t._v(" "),s("p",[t._v("简单记一下：变更工作区用 "),s("code",[t._v("git checkout")]),t._v("，变更暂存区用 "),s("code",[t._v("git reset")]),t._v(" 。")]),t._v(" "),s("h3",{attrs:{id:"取消暂存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#取消暂存","aria-hidden":"true"}},[t._v("#")]),t._v(" 取消暂存")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消当前所有暂存")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消暂存某个（多个）文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD xxx xxx1\n")])])]),s("h3",{attrs:{id:"取消-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#取消-commit","aria-hidden":"true"}},[t._v("#")]),t._v(" 取消 commit")]),t._v(" "),s("p",[t._v("取消 commit 当然也是需要用到 "),s("code",[t._v("git reset")]),t._v(" 来切换 HEAD 位置：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 找到你想要切换回去的 hash 提交记录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意：该指令会导致之前 commit 的内容也消失，如果只是想要修改 commit 信息请参照上方的修改 commit 信息")]),t._v("\n")])])]),s("h3",{attrs:{id:"取消文件修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#取消文件修改","aria-hidden":"true"}},[t._v("#")]),t._v(" 取消文件修改")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消所有文件修改")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消某个（多个）文件修改")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -- xxx xxx1\n")])])]),s("h2",{attrs:{id:"储藏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#储藏","aria-hidden":"true"}},[t._v("#")]),t._v(" 储藏")]),t._v(" "),s("p",[t._v("主要是用于暂时不想产生新的提交，并有其余任务需要需要处理的时候。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 储藏")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看储藏")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新应用刚刚的储藏")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新应用刚刚的储藏还有另一种形式，不过会导致储藏立即移除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新应用更早的储藏")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply stash@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移除储藏")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash drop stash@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"备份（传输协议）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备份（传输协议）","aria-hidden":"true"}},[t._v("#")]),t._v(" 备份（传输协议）")]),t._v(" "),s("p",[t._v("Git 可以用过两种主要的方式在版本库之间传输数据：“哑（dumb）”协议和”智能（smart）“协议。")]),t._v(" "),s("h3",{attrs:{id:"哑协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哑协议","aria-hidden":"true"}},[t._v("#")]),t._v(" 哑协议")]),t._v(" "),s("p",[t._v("这个操作就跟克隆远程仓库类似：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首先进入你需要备份的文件夹")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" ~/backup\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clone，记得在路径的最后增加 `/.git`")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --bare /xxx/xxx/your_project/.git\n")])])]),s("h3",{attrs:{id:"智能协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#智能协议","aria-hidden":"true"}},[t._v("#")]),t._v(" 智能协议")]),t._v(" "),s("p",[t._v("其余部分与哑协议一致：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --bare file:///xxx/xxx/your_project/.git\n")])])]),s("h3",{attrs:{id:"关联备份（远端）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关联备份（远端）","aria-hidden":"true"}},[t._v("#")]),t._v(" 关联备份（远端）")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关联 name 关键字在日后可简化操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote add name file:///xxx/xxx/your_project/name.git\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push name\n")])])]),s("h2",{attrs:{id:"合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并","aria-hidden":"true"}},[t._v("#")]),t._v(" 合并")]),t._v(" "),s("p",[t._v("合并方式往往会使用两种：merge、rebase。")]),t._v(" "),s("h3",{attrs:{id:"merge-合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#merge-合并","aria-hidden":"true"}},[t._v("#")]),t._v(" merge 合并")]),t._v(" "),s("p",[t._v("举个例子，将分支 2 合并到分支 1：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout branch1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 本地")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge branch2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/branch2\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并无关联的分支（即没有共同的祖先）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge branch2 --allow-unrelated-histories\n")])])]),s("p",[t._v("合并相同的分支：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相同的分支当然是一个本地，一个远程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout branch1\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不同文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/branch1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相同文件不同区域")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/branch1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相同文件相同区域")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这时 git 无法自动合并，需要手工上了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命令行或者图形化界面均可")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改完成")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"resolved the conflict"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件名发生变更(单方修改文件名)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git 能够自动处理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/branch1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件名发生变更（双方/多方修改文件名）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git 能够识别为修改了文件名，但是冲突需要手动解决")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 去除不需要的文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" file1 file2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将需要的文件保存到暂存区并提交 commit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"resolved the conflict"')]),t._v("\n")])])]),s("h3",{attrs:{id:"rebase-合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rebase-合并","aria-hidden":"true"}},[t._v("#")]),t._v(" rebase 合并")]),t._v(" "),s("p",[t._v("很多公司并不喜欢多条分支交错的感觉（不够直观），采用 rebase 方式可以使记录保持一条线性。")]),t._v(" "),s("p",[t._v("处理远程：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到对应分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout branch1\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 处理远程分支 branch2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase origin/branch2 \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解决冲突的文件")]),t._v("\nvim file1\nvim xxx\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解决完冲突继续 rebase")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --continue\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 继续解决冲突，重复上方 vim 操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git rebase 就是这点麻烦，你在 branch1 的 commit 有几次，就会发生几次 rebase，因为 rebase 是把所有的 commit 记录都同步到 master 分支")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面解决冲突的方式很麻烦，万一你在 branch1 有十几个 commit 那…")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所以 git 也提供 Rerere 工具")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启用工具")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global rerere.enabled "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 先使用 merge 记录操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/branch2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提示有冲突需要解决")]),t._v("\nvim file1\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" add "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conflict record"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退处理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD~1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 继续使用 rebase 来合并")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase origin/branch2 \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git 会按照之前的 rerere 的规则自动处理冲突")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅需要对比一下文件是否按所想的处理了")]),t._v("\nvim file1\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" add file1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 继续 rebase")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --continue\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重复 vim - continue 操作")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=e.exports}}]);